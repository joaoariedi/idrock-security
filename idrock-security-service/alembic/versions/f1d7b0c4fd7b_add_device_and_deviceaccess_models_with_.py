"""Add Device and DeviceAccess models with unique constraint

Revision ID: f1d7b0c4fd7b
Revises: 
Create Date: 2025-09-19 13:04:11.820219

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f1d7b0c4fd7b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('event_category', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('request_id', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_event_category'), 'audit_logs', ['event_category'], unique=False)
    op.create_index(op.f('ix_audit_logs_event_type'), 'audit_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_request_id'), 'audit_logs', ['request_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('devices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('device_fingerprint', sa.String(length=255), nullable=False),
    sa.Column('is_trusted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'device_fingerprint', name='uq_user_device_fingerprint')
    )
    op.create_index('idx_user_device', 'devices', ['user_id', 'device_fingerprint'], unique=False)
    op.create_index(op.f('ix_devices_created_at'), 'devices', ['created_at'], unique=False)
    op.create_index(op.f('ix_devices_device_fingerprint'), 'devices', ['device_fingerprint'], unique=False)
    op.create_index(op.f('ix_devices_id'), 'devices', ['id'], unique=False)
    op.create_index(op.f('ix_devices_user_id'), 'devices', ['user_id'], unique=False)
    op.create_table('risk_assessments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('request_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('transaction_amount', sa.Float(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=False),
    sa.Column('risk_level', sa.String(length=10), nullable=False),
    sa.Column('risk_factors', sa.JSON(), nullable=False),
    sa.Column('recommendations', sa.JSON(), nullable=False),
    sa.Column('session_data', sa.JSON(), nullable=True),
    sa.Column('proxycheck_response', sa.JSON(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=False),
    sa.Column('api_version', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_risk_assessments_action_type'), 'risk_assessments', ['action_type'], unique=False)
    op.create_index(op.f('ix_risk_assessments_confidence_score'), 'risk_assessments', ['confidence_score'], unique=False)
    op.create_index(op.f('ix_risk_assessments_created_at'), 'risk_assessments', ['created_at'], unique=False)
    op.create_index(op.f('ix_risk_assessments_id'), 'risk_assessments', ['id'], unique=False)
    op.create_index(op.f('ix_risk_assessments_ip_address'), 'risk_assessments', ['ip_address'], unique=False)
    op.create_index(op.f('ix_risk_assessments_request_id'), 'risk_assessments', ['request_id'], unique=True)
    op.create_index(op.f('ix_risk_assessments_risk_level'), 'risk_assessments', ['risk_level'], unique=False)
    op.create_index(op.f('ix_risk_assessments_user_id'), 'risk_assessments', ['user_id'], unique=False)
    op.create_table('device_access',
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('location_data', sa.JSON(), nullable=True),
    sa.Column('asn', sa.String(length=50), nullable=True),
    sa.Column('risk_factors', sa.JSON(), nullable=True),
    sa.Column('hardware_info', sa.JSON(), nullable=True),
    sa.Column('browser_info', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('device_id', 'timestamp')
    )
    op.create_index('idx_device_timestamp', 'device_access', ['device_id', 'timestamp'], unique=False)
    op.create_index('idx_ip_address', 'device_access', ['ip_address'], unique=False)
    op.create_index('idx_timestamp', 'device_access', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_timestamp', table_name='device_access')
    op.drop_index('idx_ip_address', table_name='device_access')
    op.drop_index('idx_device_timestamp', table_name='device_access')
    op.drop_table('device_access')
    op.drop_index(op.f('ix_risk_assessments_user_id'), table_name='risk_assessments')
    op.drop_index(op.f('ix_risk_assessments_risk_level'), table_name='risk_assessments')
    op.drop_index(op.f('ix_risk_assessments_request_id'), table_name='risk_assessments')
    op.drop_index(op.f('ix_risk_assessments_ip_address'), table_name='risk_assessments')
    op.drop_index(op.f('ix_risk_assessments_id'), table_name='risk_assessments')
    op.drop_index(op.f('ix_risk_assessments_created_at'), table_name='risk_assessments')
    op.drop_index(op.f('ix_risk_assessments_confidence_score'), table_name='risk_assessments')
    op.drop_index(op.f('ix_risk_assessments_action_type'), table_name='risk_assessments')
    op.drop_table('risk_assessments')
    op.drop_index(op.f('ix_devices_user_id'), table_name='devices')
    op.drop_index(op.f('ix_devices_id'), table_name='devices')
    op.drop_index(op.f('ix_devices_device_fingerprint'), table_name='devices')
    op.drop_index(op.f('ix_devices_created_at'), table_name='devices')
    op.drop_index('idx_user_device', table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_request_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_event_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_event_category'), table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
