services:
  # IDROCK Security Service (FastAPI)
  idrock-security:
    build: ./idrock-security-service
    container_name: idrock-security
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - DATABASE_URL=sqlite:///./data/idrock_security.db
      - PROXYCHECK_API_KEY=${PROXYCHECK_API_KEY:-}
      - SECRET_KEY=${IDROCK_SECRET_KEY:-your-secret-key-change-in-production}
    volumes:
      - idrock_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - idrock-network

  # NexShop E-commerce Service (Node.js/Express)
  nexshop-ecommerce:
    build: ./nexshop-ecommerce-service
    container_name: nexshop-ecommerce
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=sqlite:./data/nexshop.db
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-change-in-production}
      - IDROCK_API_URL=http://idrock-security:8000
      - IDROCK_API_KEY=${IDROCK_API_KEY:-}
      - CORS_ORIGIN=http://localhost:3001
    volumes:
      - nexshop_data:/app/data
    depends_on:
      idrock-security:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - idrock-network

volumes:
  idrock_data:
    driver: local
  nexshop_data:
    driver: local

networks:
  idrock-network:
    driver: bridge